(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{706:function(a,e,t){"use strict";t.r(e);var n=t(4),o=Object(n.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("背景呢是因为需要在 web 中上传文件到 hdfs ，所以需要在spring boot中加入hadoop相关的jar包。在加入的过程中容易出一些错误，主要是包冲突这一类的问题，解决了之后就好了，在这里顺便记录一下此次解决问题的思路，有需要的朋友可以看看。")]),a._v(" "),t("h2",{attrs:{id:"一-spring-boot整合hadoop依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-spring-boot整合hadoop依赖"}},[a._v("#")]),a._v(" 一. Spring boot整合Hadoop依赖")]),a._v(" "),t("p",[a._v("先给出答案吧，要整合hadoop，比如在 web 中对Hdfs 进行一些处理什么的，直接在pom.xml 中加入以下依赖就行。对了，记得要改成你对应的版本。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("    \x3c!-- hadoop 依赖 --\x3e\n    <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-hdfs</artifactId>\n        <version>2.7.4</version>\n        <exclusions>\n            <exclusion> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId></exclusion>\n            <exclusion> <groupId>log4j</groupId> <artifactId>log4j</artifactId> </exclusion>\n            <exclusion> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> </exclusion>\n        </exclusions>\n    </dependency>\n    \x3c!-- https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-common --\x3e\n    <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-common</artifactId>\n        <version>2.7.4</version>\n        <exclusions>\n            <exclusion> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId></exclusion>\n            <exclusion> <groupId>log4j</groupId> <artifactId>log4j</artifactId> </exclusion>\n            <exclusion> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> </exclusion>\n        </exclusions>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-client</artifactId>\n        <version>2.7.4</version>\n        <exclusions>\n            <exclusion> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId></exclusion>\n            <exclusion> <groupId>log4j</groupId> <artifactId>log4j</artifactId> </exclusion>\n            <exclusion> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> </exclusion>\n        </exclusions>\n    </dependency>\n")])])]),t("p",[a._v("把这段代码放到pom.xml 里面应该就没问题了，这里主要是需要用 来排除掉一些hadoop的依赖包，不知道 标签的请自行百度。hadoop和 spring boot 冲突的主要有两个，一个是slf4j的日志包，一个是和tomcat冲突的 servlet-api 包，去掉 hadoop这两个依赖就可以成功运行 spring boot 了。")]),a._v(" "),t("h2",{attrs:{id:"二-发现问题的思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-发现问题的思路"}},[a._v("#")]),a._v(" 二. 发现问题的思路")]),a._v(" "),t("p",[a._v("刚开始加入hadoop包的时候，出现了这样的错误")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Caused by: java.lang.IllegalStateException: Detected both log4j-over-slf4j.jar AND bound slf4j-log4j12.jar on the class path, preempting StackOverflowError. See also http://www.slf4j.org/codes.html#log4jDelegationLoop for more details.\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("我就明白是因为日志包log4j这些冲突了，于是就添加排除了这些包，但又有出现了新的错误。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]\n\tat java.util.concurrent.FutureTask.report(FutureTask.java:122) [na:1.8.0_151]\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:192) [na:1.8.0_151]\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:941) ~[tomcat-embed-core-8.5.31.jar:8.5.31]\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872) [tomcat-embed-core-8.5.31.jar:8.5.31]\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) [tomcat-embed-core-8.5.31.jar:8.5.31]\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1421) [tomcat-embed-core-8.5.31.jar:8.5.31]\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1411) [tomcat-embed-core-8.5.31.jar:8.5.31]\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_151]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_151]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_151]\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_151]\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br")])]),t("p",[a._v("这个问题在网上搜了会都没法解决，于是去 stackoverflod 找了找，直接给出解决方案的倒是没有，不过看到了这个信息：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Don’t know if your problem is resolved. I had similar issues and found out that one of the dependencies is built with an older version of servlet-api. Springboot doesn’t want you to include the servlet-api, but if the dependency is built with an older version, then you will see this error.\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("意思就是说这个错误是因为依赖中有其他版本的 servlet-api ，于是就会出现上面那个错误。看到这我再去 maven 里面看了看 hadoop-common 的依赖，果然发现了个宝贝！")]),a._v(" "),t("p",[a._v("然后就很简单啦，把这玩意也给排除了，万事大吉")])])}),[],!1,null,null,null);e.default=o.exports}}]);