(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{845:function(a,s,n){"use strict";n.r(s);var e=n(4),t=Object(e.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"使用maven打包生成jar包到指定目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用maven打包生成jar包到指定目录"}},[a._v("#")]),a._v(" 使用Maven打包生成jar包到指定目录")]),a._v(" "),n("h3",{attrs:{id:"maven默认打包后，jar文件都是生成在各自服务的target下，对微服务的部署不太友好，需要整个项目上传服务器，里面包含了源码，其实我们可以在打包时把所需jar包复制到指定的目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maven默认打包后，jar文件都是生成在各自服务的target下，对微服务的部署不太友好，需要整个项目上传服务器，里面包含了源码，其实我们可以在打包时把所需jar包复制到指定的目录"}},[a._v("#")]),a._v(" maven默认打包后，jar文件都是生成在各自服务的target下，对微服务的部署不太友好，需要整个项目上传服务器，里面包含了源码，其实我们可以在打包时把所需jar包复制到指定的目录")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("在父级POM配置中加入")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("<properties>\n    \x3c!--打包配置--\x3e\n    <copy>true</copy>\n    <localDir>C:/joolun-jar</localDir>\n    ......\n</properties>\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("在各个module项目中pom中配置")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('\x3c!--打包时复制jar包到指定文件目录--\x3e\n<plugin>\n    <artifactId>maven-antrun-plugin</artifactId>\n    <executions>\n        <execution>\n            <id>copy</id>\x3c!--需要唯一--\x3e\n            <phase>package</phase>\x3c!--当执行package操作时执行一下任务--\x3e\n            <configuration>\n                <tasks>\x3c!--任务--\x3e\n                    <echo message="start.................................."/>\x3c!--打印--\x3e\n                    <echo message="load maven plugin ant-contrib-1.0b3"/>\n                    \x3c!--加载plugin ant-contrib的配置文件--\x3e\n                    <taskdef resource="net/sf/antcontrib/antlib.xml">\n                        <classpath>\x3c!--加载jar包,${settings.localRepository}的值是你maven settings文件中配置的本地仓库位置--\x3e\n                            <pathelement location="${settings.localRepository}/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>\n                        </classpath>\n                    </taskdef>\n                    \x3c!--复制jar包--\x3e\n                    <if>\n                        <equals arg1="${copy}" arg2="true"/>\x3c!--是否复制jar包--\x3e\n                        <then>\n                            <echo message="Copy jar to your desired path."/>\n                            <copy todir="${localDir}" overwrite="true">\x3c!--执行复制操作,todir的值是将要复制jar包到的地方,overwrite是否重写--\x3e\n                                <fileset dir="${project.build.directory}">\x3c!--${project.build.directory}值是你的target目录--\x3e\n                                    <include name="*.jar"/>\x3c!--target目录下的jar包--\x3e\n                                </fileset>\n                            </copy>\n                        </then>\n                    </if>\n                </tasks>\n            </configuration>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("配完以上代码后mvn clean install，部署所需的jar文件就都在C:/joolun-jar下了")])])])])}),[],!1,null,null,null);s.default=t.exports}}]);